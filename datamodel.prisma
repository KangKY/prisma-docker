type User {
    id: ID! @id
    snsId : String
    provider : String
    username: String! @unique
    email: String! @unique
    password: String!
    salt:String
    avatar : String @default(value:"https://ssl.pstatic.net/static/pwe/address/img_profile.png")
    firstName : String @default(value:"")
    lastName : String @default(value:"")
    bio : String
    notifications : [Notification!]! @relation(name: "NotificationsOfUser" onDelete:CASCADE)
    following: [User!]! @relation(name: "FollowRelation")
    followers: [User!]! @relation(name: "FollowRelation")
    posts:[Post!]! @relation(name: "PostsOfUser" onDelete: CASCADE)
    likes : [Like!]! @relation(name: "LikesOfUser" onDelete: CASCADE)
    comments : [Comment!]! @relation(name: "CommentsOfUser" onDelete: CASCADE)
    chats : [Chat!]!
    loginSecret : String
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Post {
    id: ID! @id
    location : String
    caption : String!
    category: String
    user : User @relation(name: "PostsOfUser")
    files : [File]! @relation(name: "FilesOfPost" onDelete: CASCADE)
    likes : [Like!]! @relation(name: "LikeOfPost" onDelete: CASCADE)
    comments : [Comment!]! @relation(name: "CommentOfPost" onDelete: CASCADE)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Like {
    id: ID! @id
    user : User @relation(name: "LikesOfUser")
    post : Post @relation(name: "LikeOfPost")
    comment : Comment @relation(name: "LikeOfComment")
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Comment {
    id: ID! @id
    text : String!
    user : User @relation(name: "CommentsOfUser")
    post : Post @relation(name: "CommentOfPost")
    likes : [Like!]! @relation(name: "LikeOfComment" onDelete: CASCADE)
    parent : Comment @relation(link: TABLE name: "CommentOfComments")
    seq : Int @default(value:1)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type File {
    id: ID! @id
    url : String!
    post : Post @relation(name: "FilesOfPost")
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Chat {
    id: ID! @id
    participants : [User!]!
    messages: [Message!]! @relation(name: "MessagesOfChat" onDelete: CASCADE)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Message {
    id: ID! @id
    text : String!
    from : User! @relation(name: "From")
    to : User @relation(name: "To")
    chat : Chat! @relation(name: "MessagesOfChat")
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Notification {
  id: ID! @id
  user: User! @relation(name: "NotificationsOfUser")
  oppUser : User @relation(name: "OpponentUser")
  title:String!
  message:String!
  deviceToken: String
  link: String!
  read: Boolean! @default(value:false)
  sent: Boolean! @default(value:false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
